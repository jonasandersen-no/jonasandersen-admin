name: Build latest master and deploy

on:
  push:
    branches:
      - master
    tags:
      - v*

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-24.04, ubuntu-24.04-arm ]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      packages: write
    outputs:
      projectVersion: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Setup Maven Action
        uses: s4u/setup-maven-action@v1.12.0
        with:
          java-version: 24
          java-distribution: liberica
          checkout-persist-credentials: true
          cache-enabled: false
          settings-servers: |
            [{
                "id": "reposilite-releases",
                "username": "${{ secrets.REPOSILITE_USERNAME }}",
                "password": "${{ secrets.REPOSILITE_PASSWORD }}"
            },
            {
                "id": "reposilite-snapshots",
                "username": "${{ secrets.REPOSILITE_USERNAME }}",
                "password": "${{ secrets.REPOSILITE_PASSWORD }}"
            }]
      - name: Get Maven version
        id: get_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo $VERSION
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build with Maven
        run: mvn clean deploy

      - name: Push Images to Docker Registry
        run: docker push -a bjoggis/jonasandersen-admin
  manifest:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: create-manifest
        run: |
          PROJECT_VERSION=${{ needs.build.outputs.projectVersion }}
          echo $PROJECT_VERSION
          docker manifest create bjoggis/jonasandersen-admin:v$PROJECT_VERSION --amend bjoggis/jonasandersen-admin:v$PROJECT_VERSION-x86_64 --amend bjoggis/jonasandersen-admin:v$PROJECT_VERSION-aarch_64
          docker manifest push bjoggis/jonasandersen-admin:v$PROJECT_VERSION
          docker manifest create bjoggis/jonasandersen-admin:latest --amend bjoggis/jonasandersen-admin:v$PROJECT_VERSION-x86_64 --amend bjoggis/jonasandersen-admin:v$PROJECT_VERSION-aarch_64
          docker manifest push bjoggis/jonasandersen-admin:latest
